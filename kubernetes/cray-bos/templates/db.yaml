{{/*
MIT License

(C) Copyright 2021-2025 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}
{{- $baseChartValues := index .Values "cray-service" -}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ include "cray-service.name" . }}-db"
  namespace: services
spec:
  storageClassName: "{{ .Values.database.storageClass}}"
  accessModes:
    - "{{ .Values.database.accessMode}}"
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "cray-service.name" . }}-db"
  labels:
    app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
spec:
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
  template:
    metadata:
      name: "{{ include "cray-service.name" . }}-db"
      labels:
        app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 65534
      containers:
      - name: "{{ include "cray-service.name" . }}-db"
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
        volumeMounts:
        - mountPath: /data
          name: "{{ include "cray-service.name" . }}-db"
        - name: "{{ include "cray-service.name" . }}-redis-config"
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf  # Mount the custom redis.conf file
        command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - ash
            - -c
            - redis-cli -h localhost ping
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - ash
            - -c
            - redis-cli -h localhost ping
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
      - name: "{{ include "cray-service.name" . }}-db"
        persistentVolumeClaim:
          claimName: "{{ include "cray-service.name" . }}-db"
      - name: "{{ include "cray-service.name" . }}-redis-config"
        configMap:
            name: "{{ include "cray-service.name" . }}-redis-configmap"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "cray-service.name" . }}-redis-configmap"
data:
  redis.conf: |
    # Custom redis.conf configuration here
    save 10 1
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ include "cray-service.name" . }}-db"
  labels:
    app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: "{{ include "cray-service.name" . }}-db"
  labels:
    app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "cray-service.name" . }}-db"
  policyTypes:
  - Ingress
  ingress:
  - from:
    {{/* BOS API servers */}}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: {{ include "cray-service.name" . }}
    {{/* BOS Power-on operator */}}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: {{ .Values.operators.poweron.Values.fullnameOverride}}
    {{/* BOS migration hook */}}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: "{{ include "cray-service.name" . }}-migration"
    {{/* Redis database port */}}
    ports:
    - protocol: TCP
      port: 6379
